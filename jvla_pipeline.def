BootStrap: library
From: ubuntu:18.04

%files
	#casa-pipeline-release-5.6.2-2.el7.tar.gz
	jvla_pipe.py

%help
	There are two main ways to interact with this container:

	[1] > singularity shell JVLA_CASA_pipeline.img

	This opens up an interactive shell within the container. You can use this mode to run the pipeline as normal:

	> casa --pipeline
	> import pipeline.recipes.hifv as hifv
	> hifv.hifv(['Your_SDM_File'])


	[2] > singularity run JVLA_CASA_pipeline.img

	This begins a completely automated, headless pipeline run.

	This is the preferred mode of interacting with the pipeline if you wish to use machines without X11 installed (i.e. SLURM-managed HPC nodes), and requires you to provide an appropriate inputs.ini file at the time of execution.

%runscript
	echo "This is what happens when you run the container..."
	. /conda/etc/profile.d/conda.sh
	conda activate astroconda
	xvfb-run casa --nologger --log2term --pipeline -c /jvla_pipe.py

%startscript
	echo "This is what happens when you start the container...
	. /conda/etc/profile.d/conda.sh
	conda activate astroconda
	echo "You have started the container!"

%post
	export CASASTRING=casa-pipeline-release-5.6.2-2.el7

	#Update and install KERN packages
	apt-get update
        DEBIAN_FRONTEND=noninteractive apt-get install software-properties-common time -y
        add-apt-repository -s ppa:kernsuite/kern-5
        apt-add-repository multiverse
        apt-add-repository restricted
        apt-get update
	DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y
        DEBIAN_FRONTEND=noninteractive apt-get install libgtk3* htop glances git apt-utils vim -y
        DEBIAN_FRONTEND=noninteractive apt-get install libcurl3 -y
        DEBIAN_FRONTEND=noninteractive apt-get install wsclean aoflagger carta chgcentre ddfacet factor libidg miriad obit parseltongue pybdsf tirific python-pyfftw python3-pyfftw python-pyfftw-doc python3-pip xvfb -y
	DEBIAN_FRONTEND=noninteractive apt-get install dstat* wget git-lfs bash -y
        apt-get install -y build-essential cmake gfortran g++ gcc libncurses5-dev libreadline-dev flex bison libblas-dev liblapacke-dev wcslib-dev libcfitsio-dev emacs nano
        apt-get install -y libhdf5-dev libfftw3-dev python-numpy-dev libboost-python-dev libpython3.6-dev libqt4-dev libpthread-stubs0-dev fort77 pthread* rsync
	pip3 install numpy scipy matplotlib ipython jupyter pandas sympy nose psutil ipywidgets ipyparallel bokeh scikit-learn
	
	#Install Anaconda + Astroconda + some additional useful packages
	export SINGULARITY_SHELL=/bin/bash
	wget https://repo.anaconda.com/archive/Anaconda3-2019.10-Linux-x86_64.sh -O conda.sh
	bash conda.sh -b -p conda
	. /conda/etc/profile.d/conda.sh
	conda update -y -n root conda
	conda update --all
	conda config --add channels http://ssb.stsci.edu/astroconda
	conda create -n astroconda stsci
	conda install -c conda-forge galsim astromatic-swarp astromatic-source-extractor astromatic-stiff -n astroconda
	conda install -c pkgw-forge ds9
	
	#Prepare and install CASA
	wget https://casa.nrao.edu/download/distro/casa-pipeline/release/el7/$CASASTRING.tar.gz
	tar -zxvf $CASASTRING.tar.gz

	#Update UTC table for CASA
	rsync -avz rsync://casa-rsync.nrao.edu/casa-data /$CASASTRING/data

	#Download and untar the analysis_utils package
	wget ftp://ftp.cv.nrao.edu/pub/casaguides/analysis_scripts.tar
	tar -xvf analysis_scripts.tar -C /

	#Clear up any old installation files
	rm -r conda.sh analysis_scripts.tar $CASASTRING.tar.gz
	DEBIAN_FRONTEND=noninteractive apt autoremove -y

	
%test
	. /conda/etc/profile.d/conda.sh
	conda activate astroconda
	python --version
	
%environment
	export CASASTRING=casa-pipeline-release-5.6.2-2.el7
	
	export LC_ALL=C
	export LC_CTYPE="en_US.UTF-8"
	unset XDG_RUNTIME_DIR

	export PATH="/conda/bin:$PATH"
	export PATH="/$CASASTRING/bin:$PATH"
	export PYTHONPATH="$CASAROOT/$CASA_ARCH/lib/python2.7/:$PYTHONPATH"
	export LD_LIBRARY_PATH="$CASAROOT/$CASA_ARCH/lib:$LD_LIBRARY_PATH"
	export CASA_ENABLE_TELEMETRY=false

	
%labels
	Author: Alasdair Thomson
	Version: 1.0
